{"version":3,"sources":["components/layout/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","className","to","defaultProps","Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","children","Component","Consumer","Contact","showContactInfo","onShowClick","onDeleteClick","a","delete","name","email","phone","onClick","style","cursor","bind","float","color","marginRight","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","e","target","onSubmit","preventDefault","newContact","post","history","push","About","NotFound","Test","test","console","log","nextProps","nextState","prevProps","prevState","EditContact","updatedContact","match","params","put","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.739c757e.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = props => {\n  const { branding } = props;\n\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <Link to=\"/contact-manager\" className=\"navbar-brand\">\n          {branding}\n        </Link>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/contact-manager\" className=\"nav-link\">\n                <i className=\"fas fa-home\"></i> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact-manager/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\"></i> About\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact-manager/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\"></i> Add\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"My App\"\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => {\n      this.setState(state => reducer(state, action));\n    }\n  };\n\n  async componentDidMount() {\n    // Get data from database\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  // using arrow function instead of .bind in constructor function\n  onShowClick = () => {\n    // toggle state (true/false) when user click\n    this.setState({ showContactInfo: !this.state.showContactInfo });\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      // delete in the backend (database)\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n      // delete in the frontend (state)\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    } catch (e) {\n      // delete in the frontend (state)\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    }\n  };\n\n  render() {\n    const { name, email, phone, id } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4 className=\"m-1\">\n                {name}\n                <i\n                  onClick={this.onShowClick}\n                  className={\n                    showContactInfo\n                      ? \"fas fa-chevron-circle-up ml-2\"\n                      : \"fas fa-chevron-circle-down ml-2\"\n                  }\n                  style={{ cursor: \"pointer\" }}\n                ></i>\n                <i\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                  className={showContactInfo ? \"fas fa-times\" : \"fas fa-times\"}\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                ></i>\n                <Link to={`/contact-manager/contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      color: \"black\",\n                      marginRight: \"1rem\"\n                    }}\n                  ></i>\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">\n                    <strong>Email:</strong> {email}\n                  </li>\n                  <li className=\"list-group-item\">\n                    <strong>Phone</strong>: {phone}\n                  </li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact contact={contact} key={contact.id} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    // Check for errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    // Create newContact from user input\n    const newContact = {\n      name: name,\n      email: email,\n      phone: phone\n    };\n\n    // post data to the backend\n    const res = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContact\n    );\n\n    // Add newContact to the Application State(frontend)\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n\n    // Clear state\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    // redirect to home page after user submit (add new contact)\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React from \"react\";\n\nexport default function About() {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function NotFound() {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n\nclass Test extends Component {\n  state = {\n    test: \"\"\n  };\n\n  componentDidMount() {\n    console.log(\"component DID MOUNT\");\n  }\n  UNSAFE_componentWillMount() {\n    console.log(\"component WILL MOUNT\");\n  }\n  componentDidUpdate() {\n    console.log(\"component DID UPDATE\");\n  }\n  UNSAFE_componentWillUpdate() {\n    console.log(\"component Will UPDATE\");\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps, nextState) {\n    console.log(\"componentWillReceiveProps\");\n  }\n\n  static UNSAFE_getDerivedStateFromProps(nextProps, prevState) {\n    return {\n      test: \"something\"\n    };\n  }\n\n  UNSAFE_getSnapshotBeforeUpdate(prevProps, prevState) {\n    console.log(\"getSnapshotBeforeUpdate\");\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Test Component</h1>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    // get value from url parameter\n    const { id } = this.props.match.params;\n\n    //get data from database\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    const contact = res.data;\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    // Check for errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const updatedContact = {\n      name,\n      email,\n      phone\n    };\n\n    // get value from url parameter\n    const { id } = this.props.match.params;\n\n    // edit data in the backend (database)\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updatedContact\n    );\n\n    // edite data in the frontend (state)\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n\n    // Clear state\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    // redirect to home page after user submit (add new contact)\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/layout/Header\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"./context\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/contact-manager\" component={Contacts} />\n              <Route\n                exact\n                path=\"/contact-manager/contact/add\"\n                component={AddContact}\n              />\n              <Route\n                exact\n                path=\"/contact-manager/contact/edit/:id\"\n                component={EditContact}\n              />\n              <Route exact path=\"/contact-manager/about\" component={About} />\n              <Route exact path=\"/contact-manager/test\" component={Test} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}